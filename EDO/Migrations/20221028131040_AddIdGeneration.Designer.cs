// <auto-generated />
using System;
using EDO.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EDO.Migrations
{
    [DbContext(typeof(EDOContext))]
    [Migration("20221028131040_AddIdGeneration")]
    partial class AddIdGeneration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EDO.Models.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("Author")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("Recipient")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<Guid>("Type")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Author");

                    b.HasIndex("Recipient");

                    b.HasIndex("Type");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("EDO.Models.DocumentStage", b =>
                {
                    b.Property<Guid>("VerifierId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StageId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("VerifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("VerifierId")
                        .HasName("Document_Stage_pkey");

                    b.HasIndex("DocumentId");

                    b.HasIndex("StageId");

                    b.ToTable("Document_Stage", (string)null);
                });

            modelBuilder.Entity("EDO.Models.DocumentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.ToTable("DocumentType", (string)null);
                });

            modelBuilder.Entity("EDO.Models.Stage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Stage", (string)null);
                });

            modelBuilder.Entity("EDO.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ThirdName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("EDO.Models.Document", b =>
                {
                    b.HasOne("EDO.Models.User", "AuthorNavigation")
                        .WithMany("DocumentAuthorNavigations")
                        .HasForeignKey("Author")
                        .IsRequired()
                        .HasConstraintName("Document_Author_fkey");

                    b.HasOne("EDO.Models.User", "RecipientNavigation")
                        .WithMany("DocumentRecipientNavigations")
                        .HasForeignKey("Recipient")
                        .IsRequired()
                        .HasConstraintName("Document_Recipient_fkey");

                    b.HasOne("EDO.Models.DocumentType", "TypeNavigation")
                        .WithMany("Documents")
                        .HasForeignKey("Type")
                        .IsRequired()
                        .HasConstraintName("Document_Type_fkey");

                    b.Navigation("AuthorNavigation");

                    b.Navigation("RecipientNavigation");

                    b.Navigation("TypeNavigation");
                });

            modelBuilder.Entity("EDO.Models.DocumentStage", b =>
                {
                    b.HasOne("EDO.Models.Document", "Document")
                        .WithMany("DocumentStages")
                        .HasForeignKey("DocumentId")
                        .IsRequired()
                        .HasConstraintName("Document_Stage_DocumentId_fkey");

                    b.HasOne("EDO.Models.Stage", "Stage")
                        .WithMany("DocumentStages")
                        .HasForeignKey("StageId")
                        .IsRequired()
                        .HasConstraintName("Document_Stage_StageId_fkey");

                    b.HasOne("EDO.Models.User", "Verifier")
                        .WithOne("DocumentStage")
                        .HasForeignKey("EDO.Models.DocumentStage", "VerifierId")
                        .IsRequired()
                        .HasConstraintName("Document_Stage_VerifierId_fkey");

                    b.Navigation("Document");

                    b.Navigation("Stage");

                    b.Navigation("Verifier");
                });

            modelBuilder.Entity("EDO.Models.Document", b =>
                {
                    b.Navigation("DocumentStages");
                });

            modelBuilder.Entity("EDO.Models.DocumentType", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("EDO.Models.Stage", b =>
                {
                    b.Navigation("DocumentStages");
                });

            modelBuilder.Entity("EDO.Models.User", b =>
                {
                    b.Navigation("DocumentAuthorNavigations");

                    b.Navigation("DocumentRecipientNavigations");

                    b.Navigation("DocumentStage");
                });
#pragma warning restore 612, 618
        }
    }
}
